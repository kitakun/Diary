// <auto-generated />
using System;
using Kitakun.TagDiary.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Kitakun.TagDiary.Persistance.Migrations
{
    [DbContext(typeof(DiaryDbContext))]
    partial class DiaryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Kitakun.TagDiary.Core.Domain.DiaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("MarkdownText")
                        .IsRequired();

                    b.Property<int?>("PasswordHash");

                    b.Property<byte>("Privacy");

                    b.Property<bool>("ProtectedByPassword");

                    b.Property<string>("ShortDescription")
                        .IsRequired();

                    b.Property<int>("SpaceId");

                    b.Property<string[]>("Tags")
                        .HasColumnType("varchar(255)[]");

                    b.Property<string>("TokenUrl")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SpaceId");

                    b.ToTable("DiaryRecords");
                });

            modelBuilder.Entity("Kitakun.TagDiary.Core.Domain.SpaceOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("BlogPrivacy");

                    b.Property<string>("MasterPasswordHash");

                    b.Property<string>("UrlName");

                    b.HasKey("Id");

                    b.ToTable("SpaceOwners");
                });

            modelBuilder.Entity("Kitakun.TagDiary.Core.Domain.SpaceOwnerTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string[]>("AllTagsInSpace")
                        .HasColumnType("varchar(255)[]");

                    b.Property<int>("SpaceId");

                    b.HasKey("Id");

                    b.HasIndex("SpaceId")
                        .IsUnique();

                    b.ToTable("SpaceOwnerTags");
                });

            modelBuilder.Entity("Kitakun.TagDiary.Core.Domain.DiaryRecord", b =>
                {
                    b.HasOne("Kitakun.TagDiary.Core.Domain.SpaceOwner", "SpaceOwner")
                        .WithMany("Records")
                        .HasForeignKey("SpaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Kitakun.TagDiary.Core.Domain.SpaceOwnerTags", b =>
                {
                    b.HasOne("Kitakun.TagDiary.Core.Domain.SpaceOwner", "SpaceOwner")
                        .WithOne("SpaceOwnerTagsEntity")
                        .HasForeignKey("Kitakun.TagDiary.Core.Domain.SpaceOwnerTags", "SpaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
